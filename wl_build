#!/bin/bash

. $HOME/.config/wayland-build-tools/wl_defines.sh

if [ ! -e $WLROOT ]; then
	exit 1
fi

# Bail if errors
set -e

gen() {
    pkg=$1
    shift
    echo
    echo $pkg
    cd $WLROOT/$pkg
    if [ -f ./meson.build ]
    then
        echo "meson -C build/ -Dprefix=$WLD $*"
        rm -rf build/
        meson build/ -Dprefix=$WLD $*
    elif [ -f ./autogen.sh ]
    then
        echo "./autogen.sh --prefix=$WLD $*"
        ./autogen.sh --prefix=$WLD $*
    else
        exit 1
    fi
}

compile() {
    if [ -f ./meson.build ]
    then
        ninja -C build/ install
    elif [ -f ./autogen.sh ]
    then
        make -j && make install
        if [ $? != 0 ]; then
            echo "Build Error.  Terminating"
            exit
        fi
    else
        exit 1
    fi
}

distcheck() {
    make distcheck
}

# TODO: Check if tree doesn't exist
# TODO: Log output
# TODO: If it's been a while since we last ran successfully, then
#       delete $WLD

mkdir -p $WLD/share/aclocal

echo clang
cd $WLROOT
wget https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
tar -xf clang+llvm-12.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz -C $WLD --strip-components=1

gen wayland
compile

gen wayland-protocols
compile

gen drm -Dlibkms=false
compile

gen proto
compile

gen macros
compile

gen libxcb
compile

echo
echo "xorgproto"
cd $WLROOT/xorgproto
./autogen.sh --prefix=$WLD
make -j && make install
if [ $? != 0 ]; then
    echo "Build Error.  Terminating"
    exit
fi

gen libxshmfence
compile

gen libxkbcommon \
    -Dxkb-config-root=/usr/share/X11/xkb \
    -Dx-locale-root=/usr/share/X11/locale \
    -Denable-x11=false
compile

llvm_drivers=swrast,nouveau,r300
vga_pci=$(lspci | grep VGA | head -n1)
vga_name=${vga_pci#*controller: }
vga_manu=${vga_name%% *}
if [ "${vga_manu}" = "NVIDIA" ]; then
    llvm_drivers=swrast,nouveau
fi

echo
echo "mesa"
cd $WLROOT/mesa
git clean -xfd
meson build/ -Dprefix=$WLD \
    -Dgles2=enabled \
    -Dplatforms=x11,wayland \
    -Dgbm=enabled \
    -Dshared-glapi=enabled \
    -Dshared-llvm=disabled \
    -Ddri3=enabled \
    -Dgallium-drivers=$llvm_drivers
compile


gen pixman
compile

gen cairo -Dxcb=enabled -Dgl-backend=gl
compile

echo
echo "libunwind"
cd $WLROOT/libunwind
autoreconf -i
./configure --prefix=$WLD
compile

gen libevdev
compile

gen wayland-protocols
compile

gen libwacom
compile

echo
echo libinput
cd $WLROOT/libinput
git checkout main
rm -rf $WLROOT/libinput/builddir/
mkdir $WLROOT/libinput/builddir/
echo "meson --prefix=$WLD builddir/"
meson --prefix=$WLD -Ddebug-gui=false builddir/
ninja -C builddir/
ninja -C builddir/ install
# sudo udevadm hwdb --update

gen gst-build
compile

echo
echo pipewire
cd $WLROOT/pipewire
meson setup build/
meson configure build/ -Dprefix=$WLD
ninja -C build/ install

if [ ${INCLUDE_XWAYLAND} ]; then
	if [ ${WL_BITS} = 32 ]; then
		gen libxtrans
		compile
	fi

	rm -rf $WLROOT/libepoxy/m4
	gen libepoxy
	compile

	gen glproto
	compile

	gen libxtrans
	compile

	gen libxkbfile
	compile

    cd $WLROOT/libXfont
    pattern=$( grep "bsd/string.h" ./include/libxfontint.h )
    if [ -f /usr/include/bsd/string.h ] && [ -z "$pattern" ]
    then
        sed -i '/libxfont2/a #include <bsd/string.h>  /* for strlcpy, strlcat */' ./include/libxfontint.h
    fi
	gen libXfont
	compile

	echo
	echo "xserver"
	cd $WLROOT/xserver
	./autogen.sh --prefix=$WLD --disable-docs --disable-devel-docs \
		--enable-xwayland --disable-xorg --disable-xvfb --disable-xnest \
		--disable-xquartz --disable-xwin
    make -j && make install
    if [ $? != 0 ]; then
        echo "Build Error.  Terminating"
        exit
    fi

	echo
	echo "Paths"
	mkdir -p $WLD/share/X11/xkb/rules
	if [ ! -e $WLD/share/X11/xkb/rules/evdev ]; then
		ln -s /usr/share/X11/xkb/rules/evdev $WLD/share/X11/xkb/rules/
	fi
	if [ ! -e $WLD/bin/xkbcomp ]; then
		ln -s /usr/bin/xkbcomp $WLD/bin/
	fi
fi

echo
echo "weston"
cd $WLROOT/weston
git clean -xfd
meson build/ -Dprefix=$WLD \
	-Dxwayland-path=$WLD/bin/Xwayland
compile
#distcheck

# Set up config file if it isn't there already
if [ ! -e $HOME/.config/weston.ini ]; then
    cd $WLROOT/weston/build/compositor
	cp weston.ini $HOME/.config/
fi

cd $WLROOT
